import{default as u}from"@ungap/event-target";var m={broadcast:!1},S={broadcast:!1},l=class{constructor({data:e,expiresAt:t=null}){this.data=e,this.expiresAt=t}isResolving(){return this.data instanceof Promise}hasExpired(){return this.expiresAt===null||this.expiresAt<new Date}expiresIn(e){return this.expiresAt=new Date,this.expiresAt.setMilliseconds(this.expiresAt.getMilliseconds()+e),this}},h=class{constructor(){this.elements=new Map;this.event=new u}resolve(e,t){Promise.resolve(t.data).then(n=>{if(n==null)return this.remove(e);t.data=n,this.broadcast(e,n)})}get(e){return this.elements.get(e)}set(e,t){this.elements.set(e,t),this.resolve(e,t)}remove(e,t){let{broadcast:n}={...m,...t};n&&this.broadcast(e,void 0),this.elements.delete(e)}clear(e){let{broadcast:t}={...S,...e};if(t)for(let n of this.elements.keys())this.broadcast(n,void 0);this.elements.clear()}has(e){return this.elements.has(e)}subscribe(e,t){this.event.addEventListener(e,t)}unsubscribe(e,t){this.event.removeEventListener(e,t)}broadcast(e,t){this.event.dispatchEvent(new CustomEvent(e,{detail:t}))}};var F=d=>fetch(d).then(e=>e.json()),p={cache:new h,errors:new u,fetcher:F,initialData:void 0,loadInitialCache:!0,revalidateOnStart:!0,dedupingInterval:2e3,revalidateOnFocus:!0,focusThrottleInterval:5e3,revalidateOnReconnect:!0},v={...p,force:!1},D={revalidate:!0,revalidateOptions:{...v}},R={broadcast:!1};var b=class{constructor(e){this.options={...p,...e}}get cache(){return this.options.cache}get errors(){return this.options.errors}requestData(e,t){return t(e).catch(n=>{this.errors.dispatchEvent(new CustomEvent(e,{detail:n}));return})}resolveKey(e){if(typeof e=="function")try{return e()}catch{return}return e}clear(e,t){let n={...R,...t};if(e==null)return this.cache.clear(n);if(!Array.isArray(e))return this.cache.remove(e,n);for(let a of e)this.cache.remove(a,n)}revalidate(e,t){if(!e)return;let{fetcher:n,dedupingInterval:a}=this.options,{force:r,fetcher:i,dedupingInterval:o}={...v,fetcher:n,dedupingInterval:a,...t},s;(r||!this.cache.has(e)||this.cache.has(e)&&this.cache.get(e).hasExpired())&&(s=this.requestData(e,i)),s!==void 0&&this.mutate(e,new l({data:s}).expiresIn(o),{revalidate:!1})}mutate(e,t,n){if(!e)return;let{revalidate:a,revalidateOptions:r}={...D,...n},i;if(typeof t=="function"){let o=null;if(this.cache.has(e)){let s=this.cache.get(e);s.isResolving()||(o=s.data)}i=t(o)}else i=t;this.cache.set(e,i instanceof l?i:new l({data:i})),a&&this.revalidate(e,r)}subscribe(e,t){if(e){let n=({detail:a})=>t(a);return this.cache.subscribe(e,n),()=>this.cache.unsubscribe(e,n)}return()=>{}}subscribeErrors(e,t){if(e){let n=({detail:a})=>t(a);return this.errors.addEventListener(e,n),()=>this.errors.removeEventListener(e,n)}return()=>{}}subscribeVisibility(e,{throttleInterval:t=5e3,enabled:n=!0}={}){if(n&&typeof window!="undefined"){let a=null,r=()=>{let i=Date.now();(a===null||i-a>t)&&(a=i,e())};return window.addEventListener("focus",r),()=>window.removeEventListener("focus",r)}return()=>{}}subscribeNetwork(e,{enabled:t=!0}={}){return t&&typeof window!="undefined"?(window.addEventListener("online",e),()=>window.removeEventListener("online",e)):()=>{}}get(e){if(e&&this.cache.has(e)){let t=this.cache.get(e);if(!t.isResolving())return t.data}return}use(e,t,n,a){let{fetcher:r,initialData:i,loadInitialCache:o,revalidateOnStart:s,dedupingInterval:W,revalidateOnFocus:C,focusThrottleInterval:O,revalidateOnReconnect:y}={...this.options,...a},E=(c,M)=>this.mutate(this.resolveKey(e),c,M),x=c=>this.revalidate(this.resolveKey(e),c),f=()=>x({fetcher:r,dedupingInterval:W});s&&f();let K=this.subscribe(this.resolveKey(e),t),g=this.subscribeErrors(this.resolveKey(e),n),w=this.subscribeVisibility(f,{throttleInterval:O,enabled:C}),I=this.subscribeNetwork(f,{enabled:y}),P=()=>{K(),g(),w(),I()};if(i&&E(i,{revalidate:!1}),o){let c=this.get(this.resolveKey(e));c&&t(c)}return{unsubscribe:P}}};export{l as CacheItem,h as DefaultCache,b as SWR,S as defaultCacheClearOptions,m as defaultCacheRemoveOptions,R as defaultClearOptions,D as defaultMutateOptions,p as defaultOptions,v as defaultRevalidateOptions};
/*! Copyright (c) Èrik C. Forés - MIT */
